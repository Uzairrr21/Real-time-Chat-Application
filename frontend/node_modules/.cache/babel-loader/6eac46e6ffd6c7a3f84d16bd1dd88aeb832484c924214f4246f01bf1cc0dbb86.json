{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\mern-chat-app\\\\frontend\\\\src\\\\context\\\\ChatContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect, useContext, useCallback } from 'react';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\nimport AuthContext from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContext = /*#__PURE__*/createContext();\nexport const ChatProvider = ({\n  children\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const {\n    user,\n    isAuthenticated,\n    token,\n    logout\n  } = useContext(AuthContext);\n\n  // Stable socket connection with reconnection\n  const connectSocket = useCallback(() => {\n    if (!isAuthenticated || !token) return;\n    const newSocket = io('http://localhost:5000', {\n      path: '/socket.io/',\n      auth: {\n        token\n      },\n      transports: ['websocket'],\n      reconnection: true,\n      reconnectionAttempts: Infinity,\n      reconnectionDelay: 1000,\n      reconnectionDelayMax: 5000,\n      timeout: 20000\n    });\n    newSocket.on('connect', () => {\n      console.log('Socket connected');\n    });\n    newSocket.on('disconnect', reason => {\n      console.log('Socket disconnected:', reason);\n      if (reason === 'io server disconnect') {\n        setTimeout(() => connectSocket(), 1000);\n      }\n    });\n    newSocket.on('connect_error', err => {\n      console.error('Connection error:', err);\n      setTimeout(() => connectSocket(), 5000);\n    });\n    newSocket.on('message', message => {\n      setMessages(prev => [...prev, message]);\n    });\n    newSocket.on('onlineUsers', users => {\n      setOnlineUsers(users);\n    });\n    newSocket.on('typing', ({\n      userId,\n      isTyping\n    }) => {\n      setTypingUsers(prev => isTyping ? [...prev.filter(id => id !== userId), userId] : prev.filter(id => id !== userId));\n    });\n    setSocket(newSocket);\n    return () => newSocket.disconnect();\n  }, [isAuthenticated, token]);\n  useEffect(() => {\n    connectSocket();\n  }, [connectSocket]);\n\n  // Fetch messages with error handling\n  const fetchMessages = useCallback(async () => {\n    try {\n      const res = await axios.get('/api/messages', {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      setMessages(res.data);\n    } catch (err) {\n      var _err$response;\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) logout();\n      console.error('Fetch messages error:', err);\n    }\n  }, [token, logout]);\n  useEffect(() => {\n    if (isAuthenticated) fetchMessages();\n  }, [isAuthenticated, fetchMessages]);\n\n  // Send message with retry logic\n  const sendMessage = async content => {\n    try {\n      if (!(socket !== null && socket !== void 0 && socket.connected)) throw new Error('Not connected');\n      const res = await axios.post('/api/messages', {\n        content\n      }, {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      socket.emit('message', res.data);\n      return res.data;\n    } catch (err) {\n      var _err$response2, _err$response3;\n      if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401) logout();\n      throw ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data) || {\n        message: 'Failed to send message'\n      };\n    }\n  };\n  const sendTyping = isTyping => {\n    if (socket !== null && socket !== void 0 && socket.connected) {\n      socket.emit('typing', {\n        isTyping\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      messages,\n      onlineUsers,\n      typingUsers,\n      sendMessage,\n      sendTyping,\n      fetchMessages\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatProvider, \"/hNbpIm/tYQEskwFgDClPMkj5fE=\");\n_c = ChatProvider;\nexport default ChatContext;\nvar _c;\n$RefreshReg$(_c, \"ChatProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useContext","useCallback","axios","io","AuthContext","jsxDEV","_jsxDEV","ChatContext","ChatProvider","children","_s","messages","setMessages","onlineUsers","setOnlineUsers","typingUsers","setTypingUsers","socket","setSocket","user","isAuthenticated","token","logout","connectSocket","newSocket","path","auth","transports","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","timeout","on","console","log","reason","setTimeout","err","error","message","prev","users","userId","isTyping","filter","id","disconnect","fetchMessages","res","get","headers","data","_err$response","response","status","sendMessage","content","connected","Error","post","emit","_err$response2","_err$response3","sendTyping","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/mern-chat-app/frontend/src/context/ChatContext.js"],"sourcesContent":["import { createContext, useState, useEffect, useContext, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { io } from 'socket.io-client';\r\nimport AuthContext from './AuthContext';\r\n\r\nconst ChatContext = createContext();\r\n\r\nexport const ChatProvider = ({ children }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const [typingUsers, setTypingUsers] = useState([]);\r\n  const [socket, setSocket] = useState(null);\r\n  const { user, isAuthenticated, token, logout } = useContext(AuthContext);\r\n\r\n  // Stable socket connection with reconnection\r\n  const connectSocket = useCallback(() => {\r\n    if (!isAuthenticated || !token) return;\r\n\r\n    const newSocket = io('http://localhost:5000', {\r\n      path: '/socket.io/',\r\n      auth: { token },\r\n      transports: ['websocket'],\r\n      reconnection: true,\r\n      reconnectionAttempts: Infinity,\r\n      reconnectionDelay: 1000,\r\n      reconnectionDelayMax: 5000,\r\n      timeout: 20000\r\n    });\r\n\r\n    newSocket.on('connect', () => {\r\n      console.log('Socket connected');\r\n    });\r\n\r\n    newSocket.on('disconnect', (reason) => {\r\n      console.log('Socket disconnected:', reason);\r\n      if (reason === 'io server disconnect') {\r\n        setTimeout(() => connectSocket(), 1000);\r\n      }\r\n    });\r\n\r\n    newSocket.on('connect_error', (err) => {\r\n      console.error('Connection error:', err);\r\n      setTimeout(() => connectSocket(), 5000);\r\n    });\r\n\r\n    newSocket.on('message', (message) => {\r\n      setMessages(prev => [...prev, message]);\r\n    });\r\n\r\n    newSocket.on('onlineUsers', (users) => {\r\n      setOnlineUsers(users);\r\n    });\r\n\r\n    newSocket.on('typing', ({ userId, isTyping }) => {\r\n      setTypingUsers(prev => \r\n        isTyping \r\n          ? [...prev.filter(id => id !== userId), userId]\r\n          : prev.filter(id => id !== userId)\r\n      );\r\n    });\r\n\r\n    setSocket(newSocket);\r\n    return () => newSocket.disconnect();\r\n  }, [isAuthenticated, token]);\r\n\r\n  useEffect(() => {\r\n    connectSocket();\r\n  }, [connectSocket]);\r\n\r\n  // Fetch messages with error handling\r\n  const fetchMessages = useCallback(async () => {\r\n    try {\r\n      const res = await axios.get('/api/messages', {\r\n        headers: { 'x-auth-token': token }\r\n      });\r\n      setMessages(res.data);\r\n    } catch (err) {\r\n      if (err.response?.status === 401) logout();\r\n      console.error('Fetch messages error:', err);\r\n    }\r\n  }, [token, logout]);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) fetchMessages();\r\n  }, [isAuthenticated, fetchMessages]);\r\n\r\n  // Send message with retry logic\r\n  const sendMessage = async (content) => {\r\n    try {\r\n      if (!socket?.connected) throw new Error('Not connected');\r\n      \r\n      const res = await axios.post('/api/messages', { content }, {\r\n        headers: { 'x-auth-token': token }\r\n      });\r\n      socket.emit('message', res.data);\r\n      return res.data;\r\n    } catch (err) {\r\n      if (err.response?.status === 401) logout();\r\n      throw err.response?.data || { message: 'Failed to send message' };\r\n    }\r\n  };\r\n\r\n  const sendTyping = (isTyping) => {\r\n    if (socket?.connected) {\r\n      socket.emit('typing', { isTyping });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ChatContext.Provider value={{ \r\n      messages, \r\n      onlineUsers, \r\n      typingUsers, \r\n      sendMessage, \r\n      sendTyping,\r\n      fetchMessages\r\n    }}>\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ChatContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}