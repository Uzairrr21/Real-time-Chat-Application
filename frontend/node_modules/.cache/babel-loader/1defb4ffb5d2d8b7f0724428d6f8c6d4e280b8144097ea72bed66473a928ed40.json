{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\mern-chat-app\\\\frontend\\\\src\\\\context\\\\ChatContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\nimport AuthContext from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContext = /*#__PURE__*/createContext();\nexport const ChatProvider = ({\n  children\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const {\n    user,\n    isAuthenticated,\n    token,\n    logout\n  } = useContext(AuthContext);\n  useEffect(() => {\n    if (isAuthenticated && user && token) {\n      const newSocket = io('http://localhost:5000', {\n        path: '/socket.io/',\n        withCredentials: true,\n        extraHeaders: {\n          'x-auth-token': token\n        }\n      });\n      setSocket(newSocket);\n      newSocket.on('connect', () => {\n        newSocket.emit('register', user.id);\n      });\n      newSocket.on('message', message => {\n        setMessages(prev => [...prev, message]);\n      });\n      newSocket.on('onlineUsers', users => {\n        setOnlineUsers(users);\n      });\n      newSocket.on('typing', ({\n        userId,\n        isTyping\n      }) => {\n        setTypingUsers(prev => isTyping ? [...new Set([...prev, userId])] : prev.filter(id => id !== userId));\n      });\n      return () => {\n        newSocket.disconnect();\n      };\n    }\n  }, [isAuthenticated, user, token]);\n  const fetchMessages = useCallback(async () => {\n    try {\n      const res = await axios.get('/api/messages', {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      setMessages(res.data);\n    } catch (err) {\n      var _err$response;\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n        logout(); // Token expired, force logout\n      }\n      console.error('Error fetching messages:', err);\n    }\n  }, [token, logout]);\n  useEffect(() => {\n    if (isAuthenticated && token) {\n      fetchMessages();\n    }\n  }, [isAuthenticated, token, fetchMessages]);\n  const sendMessage = async content => {\n    try {\n      const res = await axios.post('/api/messages', {\n        content\n      }, {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      socket.emit('message', res.data);\n      return res.data;\n    } catch (err) {\n      var _err$response2, _err$response3;\n      if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401) {\n        logout(); // Token expired, force logout\n      }\n      console.error('Error sending message:', err);\n      throw ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data) || {\n        message: 'Failed to send message'\n      };\n    }\n  };\n  const sendTyping = isTyping => {\n    if (socket && socket.connected) {\n      socket.emit('typing', {\n        userId: user.id,\n        isTyping\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      messages,\n      onlineUsers,\n      typingUsers,\n      sendMessage,\n      sendTyping,\n      fetchMessages\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatProvider, \"fEcBZ4kXna/cEwZJo8fs0W38sQc=\");\n_c = ChatProvider;\nexport default ChatContext;\nvar _c;\n$RefreshReg$(_c, \"ChatProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useContext","axios","io","AuthContext","jsxDEV","_jsxDEV","ChatContext","ChatProvider","children","_s","messages","setMessages","onlineUsers","setOnlineUsers","typingUsers","setTypingUsers","socket","setSocket","user","isAuthenticated","token","logout","newSocket","path","withCredentials","extraHeaders","on","emit","id","message","prev","users","userId","isTyping","Set","filter","disconnect","fetchMessages","useCallback","res","get","headers","data","err","_err$response","response","status","console","error","sendMessage","content","post","_err$response2","_err$response3","sendTyping","connected","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/mern-chat-app/frontend/src/context/ChatContext.js"],"sourcesContent":["import { createContext, useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { io } from 'socket.io-client';\r\nimport AuthContext from './AuthContext';\r\n\r\nconst ChatContext = createContext();\r\n\r\nexport const ChatProvider = ({ children }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const [typingUsers, setTypingUsers] = useState([]);\r\n  const [socket, setSocket] = useState(null);\r\n  const { user, isAuthenticated, token, logout } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated && user && token) {\r\n      const newSocket = io('http://localhost:5000', {\r\n        path: '/socket.io/',\r\n        withCredentials: true,\r\n        extraHeaders: {\r\n          'x-auth-token': token\r\n        }\r\n      });\r\n\r\n      setSocket(newSocket);\r\n\r\n      newSocket.on('connect', () => {\r\n        newSocket.emit('register', user.id);\r\n      });\r\n\r\n      newSocket.on('message', (message) => {\r\n        setMessages(prev => [...prev, message]);\r\n      });\r\n\r\n      newSocket.on('onlineUsers', (users) => {\r\n        setOnlineUsers(users);\r\n      });\r\n\r\n      newSocket.on('typing', ({ userId, isTyping }) => {\r\n        setTypingUsers(prev => \r\n          isTyping \r\n            ? [...new Set([...prev, userId])] \r\n            : prev.filter(id => id !== userId)\r\n        );\r\n      });\r\n\r\n      return () => {\r\n        newSocket.disconnect();\r\n      };\r\n    }\r\n  }, [isAuthenticated, user, token]);\r\n\r\n  const fetchMessages = useCallback(async () => {\r\n    try {\r\n      const res = await axios.get('/api/messages', {\r\n        headers: {\r\n          'x-auth-token': token\r\n        }\r\n      });\r\n      setMessages(res.data);\r\n    } catch (err) {\r\n      if (err.response?.status === 401) {\r\n        logout(); // Token expired, force logout\r\n      }\r\n      console.error('Error fetching messages:', err);\r\n    }\r\n  }, [token, logout]);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated && token) {\r\n      fetchMessages();\r\n    }\r\n  }, [isAuthenticated, token, fetchMessages]);\r\n\r\n  const sendMessage = async (content) => {\r\n    try {\r\n      const res = await axios.post('/api/messages', { content }, {\r\n        headers: {\r\n          'x-auth-token': token\r\n        }\r\n      });\r\n      socket.emit('message', res.data);\r\n      return res.data;\r\n    } catch (err) {\r\n      if (err.response?.status === 401) {\r\n        logout(); // Token expired, force logout\r\n      }\r\n      console.error('Error sending message:', err);\r\n      throw err.response?.data || { message: 'Failed to send message' };\r\n    }\r\n  };\r\n\r\n  const sendTyping = (isTyping) => {\r\n    if (socket && socket.connected) {\r\n      socket.emit('typing', { userId: user.id, isTyping });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ChatContext.Provider value={{ \r\n      messages, \r\n      onlineUsers, \r\n      typingUsers, \r\n      sendMessage, \r\n      sendTyping,\r\n      fetchMessages\r\n    }}>\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ChatContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}