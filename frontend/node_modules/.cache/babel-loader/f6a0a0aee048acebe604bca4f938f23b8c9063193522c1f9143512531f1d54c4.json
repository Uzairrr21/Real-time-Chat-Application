{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\mern-chat-app\\\\frontend\\\\src\\\\context\\\\ChatContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatContext = /*#__PURE__*/createContext();\nexport const ChatProvider = ({\n  children\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Removed unused 'user' variable or use it if needed\n  const [user, setUser] = useState(null); // Only include if you need this\n\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch('/api/messages');\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      const data = await response.json();\n      setMessages(data);\n    } catch (err) {\n      setError(err.message);\n      console.error('Error fetching messages:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n  const addMessage = async newMessage => {\n    try {\n      const response = await fetch('/api/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newMessage)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add message');\n      }\n      const data = await response.json();\n      setMessages(prev => [...prev, data]);\n    } catch (err) {\n      setError(err.message);\n      console.error('Error adding message:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      messages,\n      loading,\n      error,\n      addMessage,\n      user,\n      setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatProvider, \"zn6lJu12KxoSNqe5sm+DS3m+VZw=\");\n_c = ChatProvider;\nvar _c;\n$RefreshReg$(_c, \"ChatProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ChatContext","ChatProvider","children","_s","messages","setMessages","loading","setLoading","error","setError","user","setUser","fetchMessages","response","fetch","ok","Error","data","json","err","message","console","addMessage","newMessage","method","headers","body","JSON","stringify","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/mern-chat-app/frontend/src/context/ChatContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const ChatContext = createContext();\r\n\r\nexport const ChatProvider = ({ children }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Removed unused 'user' variable or use it if needed\r\n  const [user, setUser] = useState(null); // Only include if you need this\r\n\r\n  const fetchMessages = async () => {\r\n    try {\r\n      const response = await fetch('/api/messages');\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch messages');\r\n      }\r\n      const data = await response.json();\r\n      setMessages(data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      console.error('Error fetching messages:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n  }, []);\r\n\r\n  const addMessage = async (newMessage) => {\r\n    try {\r\n      const response = await fetch('/api/messages', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(newMessage),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to add message');\r\n      }\r\n      const data = await response.json();\r\n      setMessages(prev => [...prev, data]);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      console.error('Error adding message:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ChatContext.Provider value={{ messages, loading, error, addMessage, user, setUser }}>\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExC,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,CAAC;MAC7C,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCb,WAAW,CAACY,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZV,QAAQ,CAACU,GAAG,CAACC,OAAO,CAAC;MACrBC,OAAO,CAACb,KAAK,CAAC,0BAA0B,EAAEW,GAAG,CAAC;IAChD,CAAC,SAAS;MACRZ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDV,SAAS,CAAC,MAAM;IACde,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,UAAU,GAAG,MAAOC,UAAU,IAAK;IACvC,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAE;QAC5CU,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,UAAU;MACjC,CAAC,CAAC;MACF,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCb,WAAW,CAACwB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEZ,IAAI,CAAC,CAAC;IACtC,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZV,QAAQ,CAACU,GAAG,CAACC,OAAO,CAAC;MACrBC,OAAO,CAACb,KAAK,CAAC,uBAAuB,EAAEW,GAAG,CAAC;IAC7C;EACF,CAAC;EAED,oBACEpB,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IAACC,KAAK,EAAE;MAAE3B,QAAQ;MAAEE,OAAO;MAAEE,KAAK;MAAEc,UAAU;MAAEZ,IAAI;MAAEC;IAAQ,CAAE;IAAAT,QAAA,EAClFA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChC,EAAA,CArDWF,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}